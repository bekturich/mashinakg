# Generated by Django 5.1.2 on 2024-10-16 04:53

import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=33, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=33)),
                ('country', models.CharField(max_length=33, verbose_name='Страна')),
                ('number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='KG')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=33)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='KG')),
            ],
        ),
        migrations.CreateModel(
            name='CarMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_make_name', models.CharField(max_length=33, unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.category')),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_name', models.CharField(max_length=33)),
                ('description', models.TextField(blank=True)),
                ('year', models.PositiveIntegerField()),
                ('add_date', models.DateField(auto_now_add=True, verbose_name='Время')),
                ('mileage', models.PositiveSmallIntegerField(default=0, verbose_name='Пробег')),
                ('image', models.ImageField(blank=True, null=True, upload_to='машины/')),
                ('with_photo', models.BooleanField(default=True)),
                ('color', models.CharField(max_length=33)),
                ('drive', models.CharField(choices=[('задний', 'ЗАДНИЙ'), ('передний', 'ПЕРЕДНИЙ'), ('полный', 'ПОЛНЫЙ')], max_length=33, verbose_name='Привод')),
                ('engine', models.CharField(choices=[('бензин', 'БЕНЗИН'), ('газ', 'ГАЗ'), ('дизель', 'ДИЗЕЛЬ'), ('электро', 'ЭЛЕКТРО'), ('гибрид', 'ГИБРИД')], max_length=33, verbose_name='Топливо')),
                ('transmission', models.CharField(choices=[('механика', 'МЕХАНИКА'), ('автомат', 'АВТОМАТ'), ('вариатор', 'ВАРИАТОР'), ('робот', 'РОБОТ')], max_length=33, verbose_name='Коробка')),
                ('volume', models.FloatField(default=0.8)),
                ('rudder', models.CharField(choices=[('справа', 'Справа'), ('слева', 'Слева')], max_length=33, verbose_name='руль')),
                ('state', models.CharField(choices=[('хорошее', 'Хорошее'), ('идеальное', 'Идеальное'), ('аварийное', 'Аварийное'), ('новое', 'Новое')], max_length=33, verbose_name='состояние')),
                ('Car_Make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.carmake')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.category')),
                ('price', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.contact')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteMovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.car')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.favorite')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=33, unique=True)),
                ('car_make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.carmake')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.model'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.userprofile'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.car')),
                ('parent_review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='list.comment')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.userprofile')),
            ],
        ),
    ]
