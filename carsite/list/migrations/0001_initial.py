# Generated by Django 5.1.2 on 2024-10-17 17:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_make_name', models.CharField(max_length=33, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('country', models.CharField(blank=True, max_length=33, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_name', models.CharField(max_length=33)),
                ('car_name_en', models.CharField(max_length=33, null=True)),
                ('car_name_ru', models.CharField(max_length=33, null=True)),
                ('car_name_ky', models.CharField(max_length=33, null=True)),
                ('car_name_de', models.CharField(max_length=33, null=True)),
                ('car_name_tr', models.CharField(max_length=33, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_ky', models.TextField(blank=True, null=True)),
                ('description_de', models.TextField(blank=True, null=True)),
                ('description_tr', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('city', models.CharField(max_length=33)),
                ('country', models.CharField(max_length=33, verbose_name='Страна')),
                ('year', models.PositiveIntegerField()),
                ('add_date', models.DateField(auto_now_add=True, verbose_name='Время')),
                ('mileage', models.PositiveSmallIntegerField(default=0, verbose_name='Пробег')),
                ('image', models.ImageField(blank=True, null=True, upload_to='машины/')),
                ('with_photo', models.BooleanField(default=True)),
                ('color', models.CharField(max_length=33, verbose_name='Цвет')),
                ('drive', models.CharField(choices=[('задний', 'ЗАДНИЙ'), ('передний', 'ПЕРЕДНИЙ'), ('полный', 'ПОЛНЫЙ')], max_length=33, verbose_name='Привод')),
                ('engine', models.CharField(choices=[('бензин', 'БЕНЗИН'), ('газ', 'ГАЗ'), ('дизель', 'ДИЗЕЛЬ'), ('электро', 'ЭЛЕКТРО'), ('гибрид', 'ГИБРИД')], max_length=33, verbose_name='Топливо')),
                ('transmission', models.CharField(choices=[('механика', 'МЕХАНИКА'), ('автомат', 'АВТОМАТ'), ('вариатор', 'ВАРИАТОР'), ('робот', 'РОБОТ')], max_length=33, verbose_name='Коробка')),
                ('volume', models.FloatField(default=0.8)),
                ('rudder', models.CharField(choices=[('справа', 'Справа'), ('слева', 'Слева')], max_length=33, verbose_name='руль')),
                ('state', models.CharField(choices=[('хорошее', 'Хорошее'), ('идеальное', 'Идеальное'), ('аварийное', 'Аварийное'), ('новое', 'Новое')], max_length=33, verbose_name='состояние')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Car_Make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.carmake', verbose_name='Марка')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.car')),
                ('parent_review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='list.comment')),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.car')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.favorite')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(max_length=33, unique=True)),
                ('car_make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.carmake')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='list.model', verbose_name='Модель'),
        ),
    ]
